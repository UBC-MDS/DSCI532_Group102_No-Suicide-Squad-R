est_TB <- c(sum(model_add$coeff[1:3]),model_add$coeff[2])
est_TC <- c(sum(model_add$coeff[1:4]),model_add$coeff[2])
est_TA
est_TB
est_TC
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = add_model_predicted_value), size = 1) +
labs(title = 'Additive Model: BASEMENT + BLDG_METRE',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
model_int
model_int%>%tidy()
model_int
model_int%>%tidy()
est_TA <- model_add$coeff[c(1,2)]
est_TA
model_int%>%tidy()
est_TA <- model_int$coeff[c(1,2)]
est_TA
model_int%>%tidy()
est_TA
model_int%>%tidy()
est_TA <- model_int$coeff[c(1,2)]
model_int%>%tidy()
est_TB <- c(sum(model_int$coeff[1:3]),sum(model_int$coeff[2:5]))
est_TB
model_int
model_int>%>tidy()
model_int>%>%tidy()
model_int%>% tidy()
est_TB <- c(sum(model_int$coeff[1,3]),sum(model_int$coeff[2,5]))
est_TB <- c(sum(model_int$coeff[1:3]),sum(model_int$coeff[2:5]))
est_TB
model_int
est_TB
model_int
model_int%>% tidy()
model_int
model_int$coeff[1:3]
est_TB <- c(sum(model_int$coeff[1],model_int$coeff[3]),sum(model_int$coeff[2],model_int$coeff[5]))
est_TB
model_int
dep_data <- depression_data %>% mutate("add_model_predicted_value" = predict(model_int))
est_TA <- model_int$coeff[c(1,2)]
est_TB <- c(sum(model_int$coeff[1],model_int$coeff[3]),sum(model_int$coeff[2],model_int$coeff[5]))
est_TC <- c(sum(model_int$coeff[1],model_int$coeff[4]),sum(model_int$coeff[2],model_int$coeff[6]))
est_TA
est_TB
est_TC
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = add_model_predicted_value), size = 1) +
labs(title = 'Additive Model: BASEMENT + BLDG_METRE',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
dep_data <- depression_data %>% mutate("add_model_predicted_value" = predict(model_int))
est_TA <- model_int$coeff[c(1,2)]
est_TB <- c(sum(model_int$coeff[1],model_int$coeff[3]),sum(model_int$coeff[2],model_int$coeff[5]))
est_TC <- c(sum(model_int$coeff[1],model_int$coeff[4]),sum(model_int$coeff[2],model_int$coeff[6]))
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = add_model_predicted_value), size = 1) +
labs(title = 'Additive Model: BASEMENT + BLDG_METRE',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
dep_data <- depression_data %>% mutate("int_model_predicted_value" = predict(model_int))
est_TA <- model_int$coeff[c(1,2)]
est_TB <- c(sum(model_int$coeff[1],model_int$coeff[3]),sum(model_int$coeff[2],model_int$coeff[5]))
est_TC <- c(sum(model_int$coeff[1],model_int$coeff[4]),sum(model_int$coeff[2],model_int$coeff[6]))
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = int_model_predicted_value), size = 1) +
labs(title = 'Additive Model: BASEMENT + BLDG_METRE',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
dep_data <- depression_data %>% mutate("add_model_predicted_value" = predict(model_add))
model_add
est_TA <- model_add$coeff[c(1,2)]
est_TB <- c(sum(model_add$coeff[1:3]),model_add$coeff[2])
est_TC <- c(sum(model_add$coeff[1:4]),model_add$coeff[2])
est_TA
est_TB
est_TC
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = add_model_predicted_value), size = 1) +
labs(title = 'Additive Model: Treatment + Age',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
dep_data <- depression_data %>% mutate("int_model_predicted_value" = predict(model_int))
est_TA <- model_int$coeff[c(1,2)]
est_TB <- c(sum(model_int$coeff[1],model_int$coeff[3]),sum(model_int$coeff[2],model_int$coeff[5]))
est_TC <- c(sum(model_int$coeff[1],model_int$coeff[4]),sum(model_int$coeff[2],model_int$coeff[6]))
ggplot(dep_data, aes(x = age, y = effect, color = treatment)) +
# xlim(0,600)+ ylim(-100,2000)+
geom_point(alpha=1,size=.1) +
# geom_line(aes(y = int_model_predicted_value), size = 1) +
labs(title = 'Interactive Model: Treatment * Age',
x = "Size (mts)",
y = "Assessed value ($)") +
theme(plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
axis.title = element_text(face = "bold", size = 12))+
geom_abline(intercept=est_TA[1],slope=est_TA[2], color='#F8766D',linetype = "dashed") +
geom_abline(intercept=est_TB[1],slope=est_TB[2], color='#00BFC4',linetype = "dashed") +
geom_abline(intercept=est_TC[1],slope=est_TC[2], color='#00BFC4',linetype = "dashed")
model_int %>% tidy()
head(sleep_data)
tail(sleep_data)
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
tidy(model_int_sleep)%>%mutate_if(is.numeric, round, 7)
sleep_data
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
tidy(model_int_sleep)%>%mutate_if(is.numeric, round, 7) %>% summarry()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
tidy(model_int_sleep)%>%mutate_if(is.numeric, round, 7) %>% summary()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
(model_int_sleep)%>%mutate_if(is.numeric, round, 7) %>% summary()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
model_int_sleep%>% summary()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
model_int_sleep%>% summary()%>%mutate_if(is.numeric, round, 7)
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
model_int_sleep%>% summary()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
sleep_dat %>% summary()
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
sleep_data %>% summary()
model_int_sleep
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
sleep_data %>% summary()
model_int_sleep %>% model.matrix()
sleep_data <- read_csv("sleep_data.csv")
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
sleep_data %>% summary()
model_int_sleep # %>% model.matrix()
sleep_data <- read_csv("sleep_data.csv")
model_int_sleep <- lm(time_to_sleep~age+method+day, data =sleep_data)
sleep_data %>% summary()
model_int_sleep %>% model.matrix()
head(brain_data)
brain_model <- lm(brain_wgt~body_wgt, data =brain_data)
tidy(brain_model)%>%mutate_if(is.numeric, round, 7)brain
head(brain_data)
brain_model <- lm(brain_wgt~body_wgt, data =brain_data)
tidy(brain_model)%>%mutate_if(is.numeric, round, 7)
au <- augment(brain_model, data = brain_data)
head(au)
head(brain_data)
brain_model <- lm(brain_wgt~body_wgt, data =brain_data)
tidy(brain_model)%>%mutate_if(is.numeric, round, 7)
brain_data_augmented <- augment(brain_model, data = brain_data)
head(brain_data_augmented)
head(brain_data)
brain_model <- lm(brain_wgt~body_wgt, data =brain_data)
tidy(brain_model)%>%mutate_if(is.numeric, round, 7)
brain_data <- augment(brain_model, data = brain_data)
head(brain_data)
head(brain_model)
head(brain_data)
mean(brain_data$brain_wgt)
head(brain_data)
new_brain_data <- select(brain_data,brain_wgt,body_wgt,.fitted)
new_brain_data
mutate(new_brain_data,y_average = mean(brain_wgt))
new_brain_data
new_brain_data <-mutate(new_brain_data,y_average = mean(brain_wgt))
head(new_brain_data)
mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))
mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
new_brain_data <-mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
head(new_brain_data)
R_squared
R_squared = 1- (sum(new_brain_data$SSR)/sum(new_brain_data$SST))
R_squared
new_brain_data <- select(brain_data,brain_wgt,body_wgt,.fitted)
new_brain_data <-mutate(new_brain_data,y_average =
new_brain_data <-mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
head(new_brain_data)
new_brain_data <-mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
new_brain_data <- select(brain_data,brain_wgt,body_wgt,.fitted)
new_brain_data <-mutate(new_brain_data,y_average = mean(brain_wgt))
new_brain_data <-mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
R_squared = 1- (sum(new_brain_data$SSR)/sum(new_brain_data$SST))
R_squared
glance(brain_model)
new_brain_data <- select(brain_data,brain_wgt,body_wgt,.fitted)
new_brain_data <-mutate(new_brain_data,y_average = mean(brain_wgt))
new_brain_data <-mutate(new_brain_data,SSR = ((brain_wgt-.fitted)^2),SST = ((brain_wgt-y_average)^2))%>%mutate_if(is.numeric, round, 3)
R_squared = 1- (sum(new_brain_data$SSR)/sum(new_brain_data$SST))
R_squared
head(gpa_data)
model_1 = lm(univ_gpa~high_gpa, data =gpa_data)
head(gpa_data)
model_2 = lm(univ_gpa~high_gpa+math_sat, data =gpa_data)
model_1 %>% tidy()
head(gpa_data)
model_1 = lm(univ_gpa~high_gpa, data =gpa_data)
model_2 = lm(univ_gpa~high_gpa+math_sat, data =gpa_data)
model_1 %>% tidy()
model_2 %>% tidy()
model_1 %>% glance()
model_2 %>% glance()
model_1 = lm(univ_gpa~high_gpa, data =gpa_data)
model_2 = lm(univ_gpa~high_gpa+math_sat, data =gpa_data)
model_1 %>% tidy()%>%mutate_if(is.numeric, round, 3)
model_2 %>% tidy()%>%mutate_if(is.numeric, round, 3)
model_1 %>% glance()%>%mutate_if(is.numeric, round, 3)
model_2 %>% glance%>%mutate_if(is.numeric, round, 3)
model_1 %>% glance()%>%mutate_if(is.numeric, round, 5)
model_2 %>% glance%>%mutate_if(is.numeric, round, 5)
model_1 %>% glance()%>%mutate_if(is.numeric, round, 10)
model_2 %>% glance%>%mutate_if(is.numeric, round, 10)
model_1 %>% glance()%>%mutate_if(is.numeric, round, 10)
model_2 %>% glance%>%mutate_if(is.numeric, round, 10)
model_1 %>% glance()%>%mutate_if(is.numeric, round, 15)
model_2 %>% glance%>%mutate_if(is.numeric, round, 15)
model_1 %>% glance()
model_2 %>% glance%>%mutate_if(is.numeric, round, 15)
anova(model_1,model_2)
anova(model_1,model_2) %>% tidy()
anova(model_1,model_2)
anova(model_1,model_2) %>% tidy()
library(tidyverse)
library(broom)
library(rsample)
gpa_data <- read_csv("gpa_data.csv")
brain_data <- read_csv("brain_data.csv")
marathon <- read_csv("marathon.csv", col_types = cols(
id = col_factor(),
female = col_factor(),
footwear = col_factor(),
group = col_factor(),
injury = col_factor()
)) %>%
filter(completed_marathon == 1) %>%
mutate(speed = distance / time,
id = factor(id),) %>%
select(-c(completed_marathon,
distance,
time))
head(marathon)
model_2_a <- lm((speed~training_miles,data=marathon))
model_2_a <- lm(speed~training_miles,data=marathon)
model_2_a %>% tidy()
model_2_a %>% tidy()%>%mutate_if(is.numeric, round, 3)
model_2_a %>% tidy()%>%mutate_if(is.numeric, round, 5)
marathon %>% select(training_miles) %>% mean()
marathon %>% select(training_miles)
marathon %>% select(speed)
marathon %>% select(speed) %>% mean()
marathon %>% select(speed) %>% pull() %>% mean()
model_2_a %>% tidy()%>%mutate_if(is.numeric, round, 5)
tidy(model_2_a)%>%mutate_if(is.numeric, round, 10)
tidy(model_2_a)%>%mutate_if(is.numeric, round, 20)
tidy(model_2_a)%>%mutate_if(is.numeric, round, 100)
tidy(model_2_a)
tidy(model_2_a)%>%mutate_if(is.numeric, round, 100)
tidy(model_2_a)
boot_fits <- marathon %>%
select(speed,training_miles)
boot_fits
boot_fits <- marathon %>%
select(speed,training_mile) %>%
rsample::bootstraps(times = N)
boot_fits
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N)
boot_fits
N <- 5000
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N)
boot_fits
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N, strata = "BS_Sample")
N <- 5000
marathon
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data=marathon, data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
boot_fits
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data=marathon, data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
%>%
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
boot_fits
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
N <- 5000
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)
boot_fits
%>%
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 5000
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm   = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 5000
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 2
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 5
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 5000
boot_fits <- marathon %>%
select(speed,training_miles) %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
N <- 5000
boot_fits <- marathon %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
head(boot_fits)
N <- 5000
boot_fits <- marathon %>%
rsample::bootstraps(times = N) %>%
mutate(
lm = map(splits, ~ lm(speed~training_miles,data = analysis(.x))),
tidy = map(lm, broom::tidy)
) %>%
select(-splits, -lm) %>%
unnest(tidy)%>%
filter(term == "training_miles") %>%
select(-term)
ggplot(boot_fits, aes(estimate)) +
geom_histogram(bins = 30) +
xlab(expression(Estimate~of~beta[1]))
head(boot_fits)
test_data <-
boot_fits %>% select(id,estimate)
test_data <-
boot_fits %>% select(id,estimate)
boot_fits %>% select(id,estimate) %>% std.error(estimate)
boot_fits %>% select(id,estimate) %>% count()
boot_fits %>% select(id,estimate) %>% std.error(estimate)/count(estimate)
boot_fits %>% select(id,estimate) %>% sd(estimate)/count(estimate)
boot_fits %>% select(id,estimate) %>% count(estimate)
boot_fits %>% select(id,estimate) %>% count()
boot_fits %>% select(id,estimate) %>% count(x$estimate)
boot_fits %>% select(id,estimate) %>% count(x.$estimate)
boot_fits %>% select(id,estimate) %>% count(x[estimate])
boot_fits %>% select(id,estimate) %>% count(.[estimate])
boot_fits %>% select(id,estimate)
test <- boot_fits
head(test)
mean(test$estimate)
head(boot_fits)
test %>% select(id,estimate)
test <- test %>% select(id,estimate)
set NODE_OPTIONS=--max-old-space-size=4096
jupyter labextension install @jupyter-widgets/jupyterlab-manager@1.1 --no-build
getwd()
setwd("~/Labs/532_Data_Viz_2/forked_version_r/DSCI532_Group102_No-Suicide-Squad-R")
